extend type Project {
  models(cursor: String, limit: Int! = 25, filter: ProjectModelsFilter): ModelCollection
  """
  Returns a tree of all the project's models and submodels.
  """
  structuredModels: StructuredModelCollection
  model(id: String): Model
  # versions(modelId: String): VersionCollection
}

type Model {
  id: ID!
  name: String!
  author: LimitedUser!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  versionCount: Int!
  previewUrl: String
  commentThreadCount: Int!
}

type ModelCollection {
  totalCount: Int!
  cursor: String
  items: [Model!]!
}

type StructuredModelCollection {
  totalCount: Int!
  structure: StructuredModel
}

type StructuredModel {
  name: String!
  model: Model
  children: [StructuredModel]
}

type Version {
  id: ID!
  referencedObject: String!
  message: String
  sourceApplication: String
  author: LimitedUser!
}

type VersionCollection {
  totalCount: Int!
  cursor: String
  items: [Version!]!
}

input ProjectModelsFilter {
  """
  Filter by source apps used in models
  """
  sourceApps: [String!]
  """
  Filter by IDs of contributors who participated in models
  """
  contributors: [String!]
}
